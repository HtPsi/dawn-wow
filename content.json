{"pages":[{"title":"About me","date":"2017-08-10T14:08:05.000Z","path":"about/index.html","text":"A brief Biography My name is Chong Wang I’m now a Ph.D. Candidate in Tsinghua University. Research Area：cQED(see more details and progress) Interested in Physics, Quantum Computation, Music, Sports, Calligraphy &amp; Typesetting. Hobbies and Skill Exp Pop Piano Acoustic Guitar Chromatic Harmonica Arrangement based on cubase Video Editing Calligraphy and Painting Badminton Table Tennis What else I can say about myselfEmmmmmm…How time flies! Without any sign, more than twenty years have passed. As looking back on the past, I can see a little innocent boy, even kind of foolish, walked on foot through the muddy countryroad all day long, rode bike from home to school day after day, and then caught the train home once a year. Those times accompanied by laughs and tear drops make the boy become the man who I am. I thank the happiness with my family and friends and I also appreciate the pain through all my life. Only the healing scars of wound can really make one remember and learn stuffs that he can never learn from books or anything else. So I never regret things that passed. I only look forward. 昨日种种，皆成今我，切莫思量，更莫哀，从今往后，怎么收获，怎么栽。 胡适 I was born into a normal wage-earners’ family in central china. Without any speciality and competition certificate, I went to college only by college entrance examination(ranked about 1000th in one million candidates) in 2008. I majored in Resources and Environment Science at Shanghai Jiao Tong University and soon felt apathetic. After one year’s struggling, I decided to change my subject to physics. I minored in Applied Physics and finally achieved two Bachelor degrees when graduated. After that, I applied for the postgraduate program at Shanghai Jiao Tong University to further my study. During my postgraduate career for master degree, I focused on the quantum optical phenomena of Micro-Cavity Optomechanical System. A few research results were accomplished there. After acquiring my master degree, I went to Tsinghua University to pursue my doctorate in Electronics Science and Technology. The more I studied and experienced, the more I discovered about what I am really interested in and where I should belong from heart. Just like a fate that has been designed, my current research projects are Quantum Simulation in Circuit Quantum Electro-Dynamics and Quantum Computation with Superconducting Quantum Circuits, which combine Computer Science, Electronics and Quantum Physics. These subjects allows me to think further about how this world works and who we are, so I decide to treat them as my lifelong research topic. I admire people who persist in their initial determinations, however, as time goes by, I gradually realize that Life is not all about things we are chasing, and one can’t be surveyed in only one aspect——everyone is multidimensional. So far, my attitude towards life can be briefly paraphrased by Yang Wen-li‘s tag “There are some things one can achieve, some things one can’t.” 有做的到的事，也有做不到的事。 杨威利銀河英雄伝説 I read books, but I didn’t read much. My favourites are Lu Yao‘s Ordinary World and Yu Hua‘s To Live. I watch movies, such as 千と千尋の神隠し, Le fabuleux destin d’Amélie Poulain, Forrest Gump, Les choristes),500 Days of Summer and Secondhand Lions. Instead of going to cinema, I watch movies on my computer. For me, watching a movie is just like reading a book, which needs one hundred percent attention. In may spare time, I’d like to arrange some chords and melodic lines by guitar and piano. I like various kinds of songs. Things change, but music never goes out of style. Besides, I am also fond of badminton and riding. I’ve seen things you people wouldn’t believe. Attack ships on fire off the shoulder of Orion. I’ve watched c-beams glitter in the dark near the Tannhauser Gate. All those…moments will be lost in time, like tears…in rain. Time to die……… Roy BattyBlade Runner I have read from someone’s blog that photograph is the key of the beauty of typesetting, and one photograph can tell more than hundreds of words. So here is a picture shot in Tsinghua before. Guess what they were doing?! Education Tsinghua University25th in QS World University Rankings 2018 2015.09 - Present: Ph.D. Candidate in Electronics Science and Technology Institute of Microelectronics Tsinghua National Laboratory for Information Science and Technology Shanghai Jiao Tong University62nd in QS World University Rankings 2018 Master of Science in Theoretical Physics Department of Physics and Astronomy Key Laboratory of Arti cial Structures and Quantum Control Shanghai Jiao Tong University62nd in QS World University Rankings 2018 Bachelor of Science in Resources and Environment Also minored in Applied Physics and achieved a Bachelor’s degree Publications Chong Wang, Hua-Jun Chen, and Ka-Di Zhu, “Nonlinear optical response of cavity optomechanical system with second-order coupling,” Appl. Opt. 54, 4623-4628 (2015) DOI:10.1364/AO.54.004623 Yu-long Liu,Chong Wang,Jing Zhang and Yu-xi Liu. “Cavity optomechanics: Manipulating photons and phonons towards the single-photon strong coupling”. Chin. Phys. B, 2018, 27(2):024204.DOI:10.1088/1674-1056/27/2/024204 Contact Me The undemanding and proper way is sending me an Email My Email address: wangchong525@126.comFor further communication, wechat is also available My wechat QR code: The end"},{"title":"Categories","date":"2018-05-11T05:52:07.861Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2018-05-11T05:52:07.861Z","path":"tags/index.html","text":""}],"posts":[{"title":"Some quotes","date":"2018-06-19T16:48:03.000Z","path":"wiki/quote/","text":"a 参考资料","tags":[{"name":"quote","slug":"quote","permalink":"https://wiki.htpsi.me/tags/quote/"}],"categories":[{"name":"Literature materials","slug":"Literature-materials","permalink":"https://wiki.htpsi.me/categories/Literature-materials/"}]},{"title":"Some Quotes","date":"2018-06-19T16:48:03.000Z","path":"wiki/quote0/","text":"No matter where you are, remembering what others said is always beneficial. On one hand, it can help you to better guide your life. On the other hand, you can expound your views more convincingly when quoting other people’s words. So here are some quotes that I daily selected just in case they’re gonna use… 你是无意穿堂风 却偏偏引山洪 Poems 撑着油纸伞，独自/彷徨在悠长、悠长/又寂寥的雨巷/我希望逢着/一个丁香一样地/结着愁怨的姑娘…… 戴望舒雨巷 Words and Sentences 人生一定要有意义吗？屋顶的存在一定是为了一所房子吗？如果你觉得屋顶不能独立的存在着，你一定没有看过亭子。人生就是亭子。 佐佐木先生一九八零年代的公寓顶层 It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way—in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only. Charles DickensA Tale of Two Cities And remember, no matter where you go, there you are. ConfuciusThe Analects …Carlos said something along the lines “if you don’t have a website nowadays, you don’t exist.” Later I paraphrased it as “I web, therefore I am a spiderman.” Yihui Xieblogdown: Creating Websites with R Markdown Not everything that counts can be counted, and not everything that can be counted counts. William Bruce CameronInformal Sociology: A Casual Introduction to Sociological Thinking A very true saying, with which may be compared the words of jesus, the son of Sirach, The life of a fool is worse than death. And, as a rule, it will be found that a man is sociable just in the degree in which he is intellectually poor and generally vulgar. For one’s choice in this world does not go much beyond solitude on one side and vulgarity on the other. Arthur SchopenhauerThe Wisdom of Life 参考资料","tags":[{"name":"Quote","slug":"Quote","permalink":"https://wiki.htpsi.me/tags/Quote/"}],"categories":[{"name":"Literature materials","slug":"Literature-materials","permalink":"https://wiki.htpsi.me/categories/Literature-materials/"},{"name":"Words and Sentences","slug":"Literature-materials/Words-and-Sentences","permalink":"https://wiki.htpsi.me/categories/Literature-materials/Words-and-Sentences/"}]},{"title":"2.New features","date":"2018-05-14T16:05:37.000Z","path":"wiki/new-feature/","text":"New feature使用icarus主题The blog theme you may fall in love with, coming to Hexo. 仓库地址Firsit,Go to your blog’s root folder and clone Icarus into themes/icarus:1$ git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus Edit your blog’s _config.yml, change the theme field to icarus to enable this theme:1theme: icarus Rename _config.yml.example in the theme folder to _config.yml. To enable Insight Search as your default search engine, you should also install hexo-generator-json-content from npm.1$ npm install -S hexo-generator-json-content 而后经过本地测试，主题配置成功： 其他功能例如评论等可以参考主题wiki。 实现排序功能（文章置顶）功能实现参考了两篇技术博客：Hexo博客添加文章置顶功能和解决Hexo置顶问题。 在Hexo生成首页HTML时，将top值高的文章排在前面，达到置顶功能。 修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js，在生成文章之前进行文章top值排序。 需添加的代码： 12345678910111213posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排&#125;); 其中涉及Javascript的比较函数：123cmp(var a, var b) &#123; return a - b; // 升序，降序的话就 b - a&#125; 修改完成后，只需要在front-matter中设置需要置顶文章的top值，将会根据top值大小来选择置顶顺序，top值越大越靠前。需要注意的是，这个文件不是主题的一部分，也不是Git管理的，备份的时候比较容易忽略。 以下是最终的generator.js内容 12345678910111213141516171819202122232425262728&apos;use strict&apos;;var pagination = require(&apos;hexo-pagination&apos;);module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, &#123; perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: &#123; __index: true &#125; &#125;);&#125;; 经过测试，文章排序正常。 icarus主题相关问题 banner 和 thumnail 引用本地图片首页能显示，但是点进文章内部引用出错 问题描述：banner引用本地图片 如 12banner: css/images/salt-lake.jpgthumbnail: css/images/salt-lake.jpg 首页能显示，但是点进文章内部无法显示 解决办法：务必不要把图片放入红色的主题内部css样式文件夹中，而是把 图片放入source中的images文件夹中，并且使用路径1/images/xxx.jpg Valine评论支持（待实现）icarus主题已经支持Valine评论系统，但是主题配置的评论模块实在是不够美观，而且也不支持latex。因此我决定自己修改主题文件来自定义评论模块样式。 主要参考了官方技术文档和三篇技术博客MonoLogueChi、Deserts和云淡风轻。另外可以参考yilia主题。 bootstrap支持（待实现）此处挖坑： 可以参考hexo上不同theme中支持bootstrap技术的博客代码。 参考博客cofess，实现bootstrap最简单的分栏功能。 Bootstrap中文官网 LaTeX 公式Markdown不天然支持Latex，一般通过mathjax插件来实现latex编译功能。 $ 表示行内公式： 质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。 $$ 表示整行公式： $$\\sum_{i=1}^n a_i=0$$ $$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$ $$\\sum^{j-1}{k=0}{\\widehat{\\gamma}{kj} z_k}$$ 访问 MathJax 参考更多使用方法。 参考资料","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/tags/Hexo/"},{"name":"排序","slug":"排序","permalink":"https://wiki.htpsi.me/tags/排序/"},{"name":"bootstrap","slug":"bootstrap","permalink":"https://wiki.htpsi.me/tags/bootstrap/"},{"name":"LaTex","slug":"LaTex","permalink":"https://wiki.htpsi.me/tags/LaTex/"},{"name":"Valine","slug":"Valine","permalink":"https://wiki.htpsi.me/tags/Valine/"},{"name":"评论","slug":"评论","permalink":"https://wiki.htpsi.me/tags/评论/"},{"name":"comment","slug":"comment","permalink":"https://wiki.htpsi.me/tags/comment/"}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/categories/Hexo/"}]},{"title":"3.Color and Characters","date":"2018-05-12T22:02:16.000Z","path":"wiki/color-and-character/","text":"Characters符号说明对应编码(应用时去掉空格)英文怎么说&amp;AND 符号&amp; amp;ampersand&lt;小于&amp; lt;little&gt;大于&amp; gt;great空格&amp; nbsp;number space¿倒问号&amp; iquest;inverted question?问号&amp; quest;question«左书名号&amp; laquo;left angle quote»右书名号&amp; raquo;right angle quote“引号&amp; quot;quote‘左单引号&amp; lsquo;left single quote’右单引号&amp; rsquo:right single quote“左双引号&amp; ldquo:left double quote”右双引号&amp; rdquo:right double quote¶段落符号&amp; para;paragraph§章节符&amp; sect;section×乘号&amp; times;times÷除号&amp; divide;divide±加减号&amp; plusmn;plus minusƒfunction&amp; fnof;还没查到√根号&amp; radic;radic∞无穷大&amp; infin;infinite°度&amp; deg;degree≠不等号&amp; ne;ne≡恒等于&amp; equiv;equivalent≤小于等于&amp; le;less than or equal to≥大于等于&amp; ge;great than or equal to⊥垂直符号&amp; perp;perpendicular←左箭头&amp; larr;left arrow→右箭头&amp; rarr;right arrow↑上箭头&amp; uarr;up arrow↓下箭头&amp; darr;down arrow↔水平箭头&amp; harr;horizontal arrow↕竖直箭头&amp; varr;vertical arrow⇐双线左箭头&amp; lArr;left arrow⇒双线右箭头&amp; rArr;right arrow⇑双线上箭头&amp; uArr;up arrow⇓双线上箭头&amp; dArr;down arrow⇔双线水平双箭头&amp; hArr;horizontal arrow⇕双线竖直箭头&amp; vArr;vertical arrow♠黑桃&amp; spades;spades♥红桃&amp; hearts;hearts♣梅花&amp; clubs;club♦方块&amp; diams;diamonds©版权&amp; copy;copy right®注册商标&amp; reg;registration™商标&amp; trade;trade¥人民币&amp; yen;€欧元&amp; euro;euro¢美分&amp; cent;cent£英磅&amp; pound;pound⊕&amp; oplus;½二分之一&amp; frac12;fraction¼四分之一&amp; frac14;fraction‰千分符号&amp; permil;per mille∴所以&amp; there4;there foreπ圆周率&amp; pi;¹商标1&amp; sup1;super 1αalpha&amp; alpha;alphaβbeta&amp; beta;betaγgamma&amp; gamma;gammaδdelta&amp; delta;deltaθtheta&amp; theta;thetaλlambda&amp; lambda;lambdaσsigma&amp; sigma;sigmaτtau&amp; tau;tau Colors 颜色名 十六进制颜色值 颜色 AliceBlue #F0F8FF rgb(240, 248, 255) AntiqueWhite #FAEBD7 rgb(250, 235, 215) Aqua #00FFFF rgb(0, 255, 255) Aquamarine #7FFFD4 rgb(127, 255, 212) Azure #F0FFFF rgb(240, 255, 255) Beige #F5F5DC rgb(245, 245, 220) Bisque #FFE4C4 rgb(255, 228, 196) Black #000000 rgb(0, 0, 0) BlanchedAlmond #FFEBCD rgb(255, 235, 205) Blue #0000FF rgb(0, 0, 255) BlueViolet #8A2BE2 rgb(138, 43, 226) Brown #A52A2A rgb(165, 42, 42) BurlyWood #DEB887 rgb(222, 184, 135) CadetBlue #5F9EA0 rgb(95, 158, 160) Chartreuse #7FFF00 rgb(127, 255, 0) Chocolate #D2691E rgb(210, 105, 30) Coral #FF7F50 rgb(255, 127, 80) CornflowerBlue #6495ED rgb(100, 149, 237) Cornsilk #FFF8DC rgb(255, 248, 220) Crimson #DC143C rgb(220, 20, 60) Cyan #00FFFF rgb(0, 255, 255) DarkBlue #00008B rgb(0, 0, 139) DarkCyan #008B8B rgb(0, 139, 139) DarkGoldenRod #B8860B rgb(184, 134, 11) DarkGray #A9A9A9 rgb(169, 169, 169) DarkGreen #006400 rgb(0, 100, 0) DarkKhaki #BDB76B rgb(189, 183, 107) DarkMagenta #8B008B rgb(139, 0, 139) DarkOliveGreen #556B2F rgb(85, 107, 47) Darkorange #FF8C00 rgb(255, 140, 0) DarkOrchid #9932CC rgb(153, 50, 204) DarkRed #8B0000 rgb(139, 0, 0) DarkSalmon #E9967A rgb(233, 150, 122) DarkSeaGreen #8FBC8F rgb(143, 188, 143) DarkSlateBlue #483D8B rgb(72, 61, 139) DarkSlateGray #2F4F4F rgb(47, 79, 79) DarkTurquoise #00CED1 rgb(0, 206, 209) DarkViolet #9400D3 rgb(148, 0, 211) DeepPink #FF1493 rgb(255, 20, 147) DeepSkyBlue #00BFFF rgb(0, 191, 255) DimGray #696969 rgb(105, 105, 105) DodgerBlue #1E90FF rgb(30, 144, 255) Feldspar #D19275 rgb(209, 146, 117) FireBrick #B22222 rgb(178, 34, 34) FloralWhite #FFFAF0 rgb(255, 250, 240) ForestGreen #228B22 rgb(34, 139, 34) Fuchsia #FF00FF rgb(255, 0, 255) Gainsboro #DCDCDC rgb(220, 220, 220) GhostWhite #F8F8FF rgb(248, 248, 255) Gold #FFD700 rgb(255, 215, 0) GoldenRod #DAA520 rgb(218, 165, 32) Gray #808080 rgb(128, 128, 128) Green #008000 rgb(0, 128, 0) GreenYellow #ADFF2F rgb(173, 255, 47) HoneyDew #F0FFF0 rgb(240, 255, 240) HotPink #FF69B4 rgb(255, 105, 180) IndianRed #CD5C5C rgb(205, 92, 92) Indigo #4B0082 rgb(75, 0, 130) Ivory #FFFFF0 rgb(255, 255, 240) Khaki #F0E68C rgb(240, 230, 140) Lavender #E6E6FA rgb(230, 230, 250) LavenderBlush #FFF0F5 rgb(255, 240, 245) LawnGreen #7CFC00 rgb(124, 252, 0) LemonChiffon #FFFACD rgb(255, 250, 205) LightBlue #ADD8E6 rgb(173, 216, 230) LightCoral #F08080 rgb(240, 128, 128) LightCyan #E0FFFF rgb(224, 255, 255) LightGoldenRodYellow #FAFAD2 rgb(250, 250, 210) LightGrey #D3D3D3 rgb(211, 211, 211) LightGreen #90EE90 rgb(144, 238, 144) LightPink #FFB6C1 rgb(255, 182, 193) LightSalmon #FFA07A rgb(255, 160, 122) LightSeaGreen #20B2AA rgb(32, 178, 170) LightSkyBlue #87CEFA rgb(135, 206, 250) LightSlateBlue #8470FF rgb(132, 112, 255) LightSlateGray #778899 rgb(119, 136, 153) LightSteelBlue #B0C4DE rgb(176, 196, 222) LightYellow #FFFFE0 rgb(255, 255, 224) Lime #00FF00 rgb(0, 255, 0) LimeGreen #32CD32 rgb(50, 205, 50) Linen #FAF0E6 rgb(250, 240, 230) Magenta #FF00FF rgb(255, 0, 255) Maroon #800000 rgb(128, 0, 0) MediumAquaMarine #66CDAA rgb(102, 205, 170) MediumBlue #0000CD rgb(0, 0, 205) MediumOrchid #BA55D3 rgb(186, 85, 211) MediumPurple #9370D8 rgb(147, 112, 216) MediumSeaGreen #3CB371 rgb(60, 179, 113) MediumSlateBlue #7B68EE rgb(123, 104, 238) MediumSpringGreen #00FA9A rgb(0, 250, 154) MediumTurquoise #48D1CC rgb(72, 209, 204) MediumVioletRed #C71585 rgb(199, 21, 133) MidnightBlue #191970 rgb(25, 25, 112) MintCream #F5FFFA rgb(245, 255, 250) MistyRose #FFE4E1 rgb(255, 228, 225) Moccasin #FFE4B5 rgb(255, 228, 181) NavajoWhite #FFDEAD rgb(255, 222, 173) Navy #000080 rgb(0, 0, 128) OldLace #FDF5E6 rgb(253, 245, 230) Olive #808000 rgb(128, 128, 0) OliveDrab #6B8E23 rgb(107, 142, 35) Orange #FFA500 rgb(255, 165, 0) OrangeRed #FF4500 rgb(255, 69, 0) Orchid #DA70D6 rgb(218, 112, 214) PaleGoldenRod #EEE8AA rgb(238, 232, 170) PaleGreen #98FB98 rgb(152, 251, 152) PaleTurquoise #AFEEEE rgb(175, 238, 238) PaleVioletRed #D87093 rgb(216, 112, 147) PapayaWhip #FFEFD5 rgb(255, 239, 213) PeachPuff #FFDAB9 rgb(255, 218, 185) Peru #CD853F rgb(205, 133, 63) Pink #FFC0CB rgb(255, 192, 203) Plum #DDA0DD rgb(221, 160, 221) PowderBlue #B0E0E6 rgb(176, 224, 230) Purple #800080 rgb(128, 0, 128) Red #FF0000 rgb(255, 0, 0) RosyBrown #BC8F8F rgb(188, 143, 143) RoyalBlue #4169E1 rgb(65, 105, 225) SaddleBrown #8B4513 rgb(139, 69, 19) Salmon #FA8072 rgb(250, 128, 114) SandyBrown #F4A460 rgb(244, 164, 96) SeaGreen #2E8B57 rgb(46, 139, 87) SeaShell #FFF5EE rgb(255, 245, 238) Sienna #A0522D rgb(160, 82, 45) Silver #C0C0C0 rgb(192, 192, 192) SkyBlue #87CEEB rgb(135, 206, 235) SlateBlue #6A5ACD rgb(106, 90, 205) SlateGray #708090 rgb(112, 128, 144) Snow #FFFAFA rgb(255, 250, 250) SpringGreen #00FF7F rgb(0, 255, 127) SteelBlue #4682B4 rgb(70, 130, 180) Tan #D2B48C rgb(210, 180, 140) Teal #008080 rgb(0, 128, 128) Thistle #D8BFD8 rgb(216, 191, 216) Tomato #FF6347 rgb(255, 99, 71) Turquoise #40E0D0 rgb(64, 224, 208) Violet #EE82EE rgb(238, 130, 238) VioletRed #D02090 rgb(208, 32, 144) Wheat #F5DEB3 rgb(245, 222, 179) White #FFFFFF rgb(255, 255, 255) WhiteSmoke #F5F5F5 rgb(245, 245, 245) Yellow #FFFF00 rgb(255, 255, 0) YellowGreen #9ACD32 rgb(154, 205, 50)","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"https://wiki.htpsi.me/tags/Markdown/"}],"categories":[{"name":"Markdown","slug":"Markdown","permalink":"https://wiki.htpsi.me/categories/Markdown/"}]},{"title":"2.Advanced Markdown Syntax","date":"2018-05-12T17:21:04.000Z","path":"wiki/Advanced-Markdown-Syntax/","text":"Markdown语法部分 内容目录在段落中填写 [TOC] 以显示全文内容的目录结构。 效果如下： [TOC] 在markdown中使用HTML中的特殊符号Markdown 由于其简洁的排版风格受到很多码字员的喜欢，由于其本身支持HTML语法， 所以在markdown中加入HTML支持的语法会使文章更具表现力。特殊符号表见简书博客或者站内链接Color and Characters。 定义型列表（暂不支持）12名词 1: 定义 1（左侧有一个可见的冒号和一个不可见的空格） 显示效果 名词 1: 定义 1（左侧有一个可见的冒号和一个不可见的空格） 代码块 2: 这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格） 站内链接1&#123;% post_link 文章文件名（不要后缀） 文章标题（可选） %&#125; 文章文件名和标题可加&quot;&quot;，但是不能加后缀如文章文件名为 Hello-World.md： 12&#123;% post_link Hello-World %&#125;&#123;% post_link &quot;Hello-World&quot; 你好世界 %&#125; 段落缩进（空格）Markdown 天然不支持空格及段落缩进，因此需要采用插入空格HTML代码的形式强行实现空格和段落缩进。1234半方大的空白&amp;ensp;或&amp;#8194;看，飞碟全方大的空白&amp;emsp;或&amp;#8195;看，飞碟不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟&amp;emsp;&amp;emsp;段落从此开始。 显示效果半方大的空白&ensp;或&#8194;看，飞碟全方大的空白&emsp;或&#8195;看，飞碟不断行的空白格&nbsp;或&#160;看，飞碟&emsp;&emsp;段落从此开始。 表格使用Markdown写东西有时需要插入表格，方式有两种： 使用Markdown的表格语法 使用html的&lt;table&gt;标签来创建表格 Markdown表格语法第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。 简单方式 12345学号|姓名|分数-|-|-小明|男|75小红|女|79小陆|男|92 显示效果 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 原生方式 12345|学号|姓名|分数||-|-|-||小明|男|75||小红|女|79||小陆|男|92| 显示效果 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 为表格第二列指定方向 12345| Tables | Are | Cool ||----------|:-------------:|------:|| col 1 is | left-aligned | $1600 || col 2 is | centered | $12 || col 3 is | right-aligned | $1 | 显示效果 Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1 插入table标签创建表格12345678910111213&lt;table&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt; &lt;th&gt;星期一&lt;/th&gt; &lt;th&gt;星期二&lt;/th&gt; &lt;th&gt;星期三&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李强&lt;/td&gt; &lt;td&gt;张明&lt;/td&gt; &lt;td&gt;王平&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 显示效果 值班人员 星期一 星期二 星期三 李强 张明 王平 会发现表格前多了很多&lt;/br&gt;换行：某些Markdown编辑器中使用&lt;table&gt;标签会出现表格前有空行的情况。 解决方法：解决办法是将代码改为紧凑模式，修改代码如下：1&lt;table&gt;&lt;tr&gt;&lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;&lt;th&gt;星期一&lt;/th&gt;&lt;th&gt;星期二&lt;/th&gt;&lt;th&gt;星期三&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;李强&lt;/td&gt;&lt;td&gt;张明&lt;/td&gt;&lt;td&gt;王平&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 显示效果 值班人员星期一星期二星期三李强张明王平 代码更改为紧凑模式的方法如下（Atom编辑器应该有方法做到，待查）： 将代码放入word文件中，ctrl+A全选，ctrl+H打开查找和替换，输入^p并点击全部替换。 有时由于缩进不是用Tab而是用空格，替换后会发现行内空格过多。解决方法是复制段落前的空格，输入并点击全部替换。 说明: 由于使用Atom编辑器写东西再用Hexo发布到Github上，所以会有这种情况出现。如果是其他编辑器，比如简书，这个不会有，因为简书压根儿不支持&lt;table&gt;标签的表格，CSDN上是支持的，不会出现以上问题。 使用哪种方式创建表格根据自己的需要而定，Markdown语法简单，但是缺点是不支持列宽度定义，表格样式定义，单元格合并等。&lt;table&gt;标签相比较而言灵活很多。 很多时候直接写表格代码是很累的，比较好的方案是在Excel中编辑，再生成代码，网上搜索相应工具也有很多，比如Tables Generator。 c-xuan使用Excel自行写了个生成代码的工具生成压缩的表格代码，在EXCEL中编辑好表格，生成的表格代码列宽会根据Excel中的表格列宽转成百分比，编辑后点击生成表格代码即在Excel文件的同一目录中出现Output.txt文件，将代码复制到Markdown中即可。工具下载 添加文件下载你可以使用网盘如七牛等做成外链下载，也可以使用站内下载。使用网盘链接的方法不再赘述，使用站内下载的方法如下： 在根目录下source文件夹创建/download文件夹，先把文件xxx.xls复制到这个文件夹。 最后在xxxx.md中想引入下载链接时，只需要在xxxx.md中按照markdown的格式引入即可。 代码如下:1[点击下载](/download/Downloadtest.xlsx) 显示效果点击下载 字体、字号、颜色Markdown在设计时定位为简单轻便的文本编辑工具，因此对复杂功能做了取舍。改变字体字号以及颜色等需要使用&lt;font&gt;标签123456&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=12 face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;&lt;font color=#00ffff&gt;null&lt;/font&gt;&lt;font color=gray size=5&gt;gray&lt;/font&gt; 显示效果 我是黑体字 我是微软雅黑 我是华文彩云 黑体 null gray 背景色由于 style 标签和标签的 style 属性都被和谐了（Really？）（这让Markdown虽然有HTML的躯体，却没有HTML的灵魂！），所以这里只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。使用示例：1&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#7FFFD4&gt;这里的背景色是：Aquamarine， 十六进制颜色值：#7FFFD4， rgb(127, 255, 212)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 显示效果 这里的背景色是：Aquamarine， 十六进制颜色值：#7FFFD4， rgb(127, 255, 212) 这里选出我比较喜欢的几个色号以备参考： Color Name 十六进制颜色值 rgb值 Aquamarine #7FFFD4rgb(127, 255, 212) Aqua #00FFFFrgb(0, 255, 255) Blue #0000FF rgb(0, 0, 255) Fuchsia #FF00FF rgb(255, 0, 255) Gold #FFD700 rgb(255, 215, 0) GreenYellow #ADFF2F rgb(173, 255, 47) Red #FF0000 rgb(255, 0, 0) Yellow #FFFF00 rgb(255, 255, 0) 颜色名列表可以参考w3school，也可以参考Color and Characters 待办事宜 Todo 列表使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：1234567891011- [ ] **Cmd Markdown 开发** - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 - [ ] 支持以 PDF 格式导出文稿 - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) - [x] 改进 LaTex 功能 - [x] 修复 LaTex 公式渲染问题 - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)- [ ] **七月旅行准备** - [ ] 准备邮轮上需要携带的物品 - [ ] 浏览日本免税店的物品 - [x] 购买蓝宝石公主号七月一日的船票 对应显示如下待办事宜 Todo 列表： Cmd Markdown 开发 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 支持以 PDF 格式导出文稿 新增Todo列表功能 语法参考 改进 LaTex 功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 语法参考 七月旅行准备 准备邮轮上需要携带的物品 浏览日本免税店的物品 购买蓝宝石公主号七月一日的船票 锚接（暂不支持）12[目录]\\&#123; #index \\&#125;跳转到[目录](#index) 注意，上面 { 字符前若不添加 \\ 则会出现编译错误显示效果hexo markdown暂不支持，后续考虑添加此feature 脚注（暂不支持）1234使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Atom[^At] 编辑器进行书写。[^1]: Markdown是一种纯文本标记语言[^2]: HyperText Markup Language 超文本标记语言[^At]: github是一款开源编辑器 显示效果hexo markdown暂不支持，后续考虑添加此feature HTML代码及插件使用插入HTML代码在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，剩下的 Markdown 都会帮你处理，例如： 实现文字居中1&lt;center&gt;「我们不想让封面消失。」&lt;/center&gt; 显示效果 「我们不想让封面消失。」 插入div标签123&lt;div class=&quot;footer&quot;&gt; © 2004 Foo Corporation&lt;/div&gt; 显示效果 © 2004 Foo Corporation Markdown小技巧文本缩进可以使用Tab键对若干行进行缩进。方法是选中若干段按Tab键，一次可以缩进两个英文字符大小的空格。两次缩进后即可引用代码。 中文输入切换有时会出现输入法无法正常切换，通常原因是因为工作界面没有被输入法识别，解决方法是在工作界面点击鼠标左键，一般会恢复正常。 参考资料 Markdown 语法手册 （完整整理版） Markdown 语法大全 包括设置字体 颜色 作业部落旗下 Cmd 在线 Markdown 编辑阅读器 CSDN-markdown编辑器语法——字体、字号与颜色 CSDN-markdown编辑器语法——背景色 Markdown使用table标签创建表格的问题 更多资料见CSDN：Markdown博客专栏","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"https://wiki.htpsi.me/tags/Markdown/"}],"categories":[{"name":"Markdown","slug":"Markdown","permalink":"https://wiki.htpsi.me/categories/Markdown/"}]},{"title":"1.Markdown Preview","date":"2018-05-12T17:02:16.000Z","path":"wiki/markdown-preview/","text":"MarkdownA markdown example shows how to write a markdown file. This document integrates core syntax and extensions (GMF). Block Elements Paragraphs and Line Breaks Headers Blockquotes Lists Code Blocks Horizontal Rules Table Span Elements Links Emphasis Code Images Strikethrough Miscellaneous Automatic Links Backslash Escapes Inline HTML Block ElementsParagraphs and Line BreaksParagraphsHTML Tag: &lt;p&gt; One or more blank lines. (A blank line is a line containing nothing but spaces or tabs is considered blank.) Code: This will be inline. This is second paragraph. Preview: This will beinline. This is second paragraph. Line BreaksHTML Tag: &lt;br /&gt; End a line with two or more spaces. Code: This will be not inline. Preview: This will be notinline. HeadersMarkdown supports two styles of headers, Setext and atx. SetextHTML Tags: &lt;h1&gt;, &lt;h2&gt; “Underlined” using equal signs (=) as &lt;h1&gt; and dashes (-) as &lt;h2&gt; in any number. Code: This is an H1 ============= This is an H2 ------------- Preview: This is an H1This is an H2 atxHTML Tags: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, &lt;h6&gt; Uses 1-6 hash characters (#) at the start of the line, corresponding to &lt;h1&gt; - &lt;h6&gt;. Code: # This is an H1 ## This is an H2 ###### This is an H6 Preview: This is an H1This is an H2This is an H6 Optionally, you may “close” atx-style headers. The closing hashes don’t need to match the number of hashes used to open the header. Code: # This is an H1 # ## This is an H2 ## ### This is an H3 ###### Preview: This is an H1This is an H2This is an H3 BlockquotesHTML Tag: &lt;blockquote&gt; Markdown uses email-style &gt; characters for blockquoting. It looks best if you hard wrap the text and put a &gt; before every line. Code: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, &gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. &gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse &gt; id sem consectetuer libero luctus adipiscing. Preview: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Markdown allows you to be lazy and only put the &gt; before the first line of a hard-wrapped paragraph. Code: &gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Preview: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &gt;. Code: &gt; This is the first level of quoting. &gt; &gt; &gt; This is nested blockquote. &gt; &gt; Back to the first level. Preview: This is the first level of quoting. This is nested blockquote. Back to the first level. Blockquotes can contain other Markdown elements, including headers, lists, and code blocks. Code: &gt; ## This is a header. &gt; &gt; 1. This is the first list item. &gt; 2. This is the second list item. &gt; &gt; Here&apos;s some example code: &gt; &gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); Preview: This is a header. This is the first list item. This is the second list item. Here’s some example code: return shell_exec(&quot;echo $input | $markdown_script&quot;); ListsMarkdown supports ordered (numbered) and unordered (bulleted) lists. UnorderedHTML Tag: &lt;ul&gt; Unordered lists use asterisks (*), pluses (+), and hyphens (-). Code: * Red * Green * Blue Preview: Red Green Blue is equivalent to: Code: + Red + Green + Blue and: Code: - Red - Green - Blue OrderedHTML Tag: &lt;ol&gt; Ordered lists use numbers followed by periods: Code: 1. Bird 2. McHale 3. Parish Preview: Bird McHale Parish It’s possible to trigger an ordered list by accident, by writing something like this: Code: 1986. What a great season. Preview: What a great season. You can backslash-escape (\\) the period: Code: 1986\\. What a great season. Preview: 1986. What a great season. IndentedBlockquoteTo put a blockquote within a list item, the blockquote’s &gt; delimiters need to be indented: Code: * A list item with a blockquote: &gt; This is a blockquote &gt; inside a list item. Preview: A list item with a blockquote: This is a blockquoteinside a list item. Code BlockTo put a code block within a list item, the code block needs to be indented twice — 8 spaces or two tabs: Code: * A list item with a code block: &lt;code goes here&gt; Preview: A list item with a code block: &lt;code goes here&gt; Nested ListCode: * A * A1 * A2 * B * C Preview: A A1 A2 B C Code BlocksHTML Tag: &lt;pre&gt; Indent every line of the block by at least 4 spaces or 1 tab. Code: This is a normal paragraph: This is a code block. Preview: This is a normal paragraph: This is a code block. A code block continues until it reaches a line that is not indented (or the end of the article). Within a code block, ampersands (&amp;) and angle brackets (&lt; and &gt;) are automatically converted into HTML entities. Code: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Preview: &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; Following sections Fenced Code Blocks and Syntax Highlighting are extensions, you can use the other way to write the code block. Fenced Code BlocksJust wrap your code in ``` ```` (as shown below) and you won't need to indent it by four spaces.1234Code: Here&apos;s an example: function test() { console.log(&quot;notice the blank line before this function?&quot;); } 123Preview:***Here&apos;s an example: function test() { console.log(“notice the blank line before this function?”);}12345678910***#### Syntax HighlightingIn your fenced block, add an optional language identifier and we&apos;ll run it through syntax highlighting ([Support Languages](https://github.com/github/linguist/blob/master/lib/linguist/languages.yml)).Code: ```ruby require &apos;redcarpet&apos; markdown = Redcarpet.new(&quot;Hello World!&quot;) puts markdown.to_html Preview: 123require 'redcarpet'markdown = Redcarpet.new(\"Hello World!\")puts markdown.to_html Horizontal RulesHTML Tag: &lt;hr /&gt;Places three or more hyphens (-), asterisks (*), or underscores (_) on a line by themselves. You may use spaces between the hyphens or asterisks. Code: * * * *** ***** - - - --------------------------------------- ___ Preview: - - - TableHTML Tag: &lt;table&gt; It’s an extension. Separates column by pipe (|) and header by dashes (-), and uses colon (:) for alignment. The outer pipes (|) and alignment are optional. There are 3 delimiters each cell at least for separating header. Code:12345678910111213| Left | Center | Right ||:-----|:------:|------:||aaa |bbb |ccc ||ddd |eee |fff | A | B---|---123|456A |B--|--12|45 Preview: Left Center Right aaa bbb ccc ddd eee fff A B 123 456 A B 12 45 Span ElementsLinksHTML Tag: &lt;a&gt; Markdown supports two style of links: inline and reference. InlineInline link format like this: [Link Text](URL &quot;Title&quot;) Title is optional. Code: This is [an example](http://example.com/ &quot;Title&quot;) inline link. [This link](http://example.net/) has no title attribute. Preview: This is an example inline link. This link has no title attribute. If you’re referring to a local resource on the same server, you can use relative paths: Code: See my [About](/about/) page for details. Preview: See my About page for details. ReferenceYou could predefine link references. Format like this: [id]: URL &quot;Title&quot; Title is also optional. And the you refer the link, format like this: [Link Text][id] Code: [id]: http://example.com/ &quot;Optional Title Here&quot; This is [an example][id] reference-style link. Preview: This is an example reference-style link. That is: Square brackets containing the link identifier (not case sensitive, optionally indented from the left margin using up to three spaces); followed by a colon; followed by one or more spaces (or tabs); followed by the URL for the link; The link URL may, optionally, be surrounded by angle brackets. optionally followed by a title attribute for the link, enclosed in double or single quotes, or enclosed in parentheses. The following three link definitions are equivalent: Code: [foo]: http://example.com/ &quot;Optional Title Here&quot; [foo]: http://example.com/ &apos;Optional Title Here&apos; [foo]: http://example.com/ (Optional Title Here) [foo]: &lt;http://example.com/&gt; &quot;Optional Title Here&quot; Uses an empty set of square brackets, the link text itself is used as the name. Code: [Google]: http://google.com/ [Google][] Preview: Google EmphasisHTML Tags: &lt;em&gt;, &lt;strong&gt; Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. One delimiter will be &lt;em&gt;; *double delimiters will be &lt;strong&gt;. Code: *single asterisks* _single underscores_ **double asterisks** __double underscores__ Preview: single asterisks single underscores double asterisks double underscores But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore. You can backslash escape it: Code: \\*this text is surrounded by literal asterisks\\* Preview: *this text is surrounded by literal asterisks* CodeHTML Tag: &lt;code&gt; Wraps it with backtick quotes (`). Code: Use the `printf()` function. Preview: Use the printf() function. To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters: Code: ``There is a literal backtick (`) here.`` Preview: There is a literal backtick (`) here. The backtick delimiters surrounding a code span may include spaces — one after the opening, one before the closing. This allows you to place literal backtick characters at the beginning or end of a code span: Code: A single backtick in a code span: `` ` `` A backtick-delimited string in a code span: `` `foo` `` Preview: A single backtick in a code span: ` A backtick-delimited string in a code span: `foo` ImagesHTML Tag: &lt;img /&gt; Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference. InlineInline image syntax looks like this: ![Alt text](URL &quot;Title&quot;) Title is optional. Code: ![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg &quot;Optional title&quot;) Preview: That is: An exclamation mark: !; followed by a set of square brackets, containing the alt attribute text for the image; followed by a set of parentheses, containing the URL or path to the image, and an optional title attribute enclosed in double or single quotes. ReferenceReference-style image syntax looks like this: ![Alt text][id] Code: [img id]: url/to/image &quot;Optional title attribute&quot; ![Alt text][img id] Preview: StrikethroughHTML Tag: &lt;del&gt; It’s an extension. GFM adds syntax to strikethrough text. Code:1~~Mistaken text.~~ Preview: Mistaken text. MiscellaneousAutomatic LinksMarkdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. Code: &lt;http://example.com/&gt; &lt;address@example.com&gt; Preview: http://example.com/ &#97;&#100;&#100;&#114;&#x65;&#x73;&#x73;&#x40;&#101;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#46;&#x63;&#111;&#109; GFM will autolink standard URLs. Code:1https://github.com/emn178/markdown Preview: https://github.com/emn178/markdown Backslash EscapesMarkdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax. Code: \\*literal asterisks\\* Preview: *literal asterisks* Markdown provides backslash escapes for the following characters: Code: \\ backslash ` backtick * asterisk _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark Inline HTMLFor any markup that is not covered by Markdown’s syntax, you simply use HTML itself. There’s no need to preface it or delimit it to indicate that you’re switching from Markdown to HTML; you just use the tags. Code: This is a regular paragraph. &lt;table&gt; &lt;tr&gt; &lt;td&gt;Foo&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; This is another regular paragraph. Preview: This is a regular paragraph. Foo This is another regular paragraph. Note that Markdown formatting syntax is not processed within block-level HTML tags. Unlike block-level HTML tags, Markdown syntax is processed within span-level tags. Code: &lt;span&gt;**Work**&lt;/span&gt; &lt;div&gt; **No Work** &lt;/div&gt; Preview: Work No Work","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"https://wiki.htpsi.me/tags/Markdown/"}],"categories":[{"name":"Markdown","slug":"Markdown","permalink":"https://wiki.htpsi.me/categories/Markdown/"}]},{"title":"1.那些搭建hexo博客碰到的坑","date":"2018-05-11T12:30:14.000Z","path":"wiki/hexo/","text":"首次搭建hexo博客是在去年八月份（感谢github提供静态网页服务），动机也很简单就是看到xiao’s group的官方网页（那时他们的网页应该还是hexo驱动的）。后来又扒拉到了Gerard ‘t Hooft和Kuba Zakrzewski的个人主页，发现老一辈的物理学者都有一个朴素的页面来介绍自己的研究，所以就想着自己能亲手做一个网站作为礼物送给老刘。 在网上经过各种调查，发现已经有现成的很多轮子了（gihub上也有自己的网页项目），其中hexo算是国人用的比较多的，所以就选择了它来做自己的主页，用来试水。中间经过各种折腾，也算了解了好多互联网技术。从去年到现在网页换了两次主题，一次地址，也碰到了很多的坑，现在就总结一下。 由于时间跨度较长，很多细节都记不太清了，那就从零开始搭建一个新的博客看看会碰到什么坑吧！ hexo建站Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。关于前期配置及相关问题可以参考官方文档。 配置环境安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序： Node.js Git 如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。 1$ npm install -g hexo-cli 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 也可以直接在文件夹中直接用命令12$ hexo init$ npm install 此处会出现如下警告：123456789101112131415161718`-- serve-static@1.13.2 +-- encodeurl@1.0.2 +-- escape-html@1.0.3 `-- send@0.16.2 +-- debug@2.6.9 +-- destroy@1.0.4 +-- etag@1.8.1 +-- fresh@0.5.2 +-- http-errors@1.6.3 | +-- setprototypeof@1.1.0 | `-- statuses@1.5.0 +-- mime@1.4.1 +-- range-parser@1.2.0 `-- statuses@1.4.0npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\\chokidar\\node_modules\\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)INFO Start blogging with Hexo! 根据查找资料，此处warning是因为npm引用了mac osx系统的fsevent，你是在win或者Linux下使用了，所以会有警告，忽略即可。 本地测试Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用。1$ npm install hexo-server --save 安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。1$ hexo server 但是为了服务器稳定工作，一般我们采用静态模式，在静态模式下，服务器只处理 public 文件夹内的文件，而不会处理文件变动，在执行时，您应该先自行执行 hexo generate。两个命令可以连写为：1$ hexo s -g 输入此命令后我们可以看到123$ hexo s -gINFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 打开测试页面 此时本地测试已经成功，可以进行下一步部署到github上。 本地测试出现问题及其原因文章路径出现乱码问题此问题基本都是由于.md文件命名不规则引起的，特别注意的是命名不要出现空格（虽然带有空格的.md文件仍可编译）。 图片引用路径问题如果直接使用绝对路径在source根目录下/images/xxx.jpg则不会有任何问题。但是为了管理方便，一般我们会启用配置文件中的post_asset_folder功能。在博客的_config.yml配置中将post_asset_folder置位true。 1post_asset_folder: true 这样就可以hexo new新建文章时建立一个相关的文件夹存储图片（或许还可以存储音频和视频？）。此时可以使用相对路径xxx.jpg直接饮用图片。但是一般会出现首页引用路径错误，图片无法显示的问题（点进文章内部可以正常显示）。 在hexo官方文档中已经有此类问题的解决方案,但是当对图片样式进行复杂设计比如添加style属性时，内置插件似乎并不支持。在网上找到其他解决方案（技术博客地址），可以通过安装插件hexo-asset-image的方法来解决，参见github仓库。 1npm install hexo-asset-image --save 此时可以直接引用关联文件夹中的图片的相对地址xxx.jpg，而不是绝对地址/images/xxx.jpg，如： 1![logo](logo.png) 显示效果为 本地服务不正常主要原因有： 文章内容出错，如插入hexo-markdown不支持的格式,会爆出如下错误。 12345678910111213141516171819202122232425$ hexo s -gINFO Start processingFATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlTemplate render error: Error: expected end of comment, got end of file at Object._prettifyError (E:\\Web\\WebPage\\node_modules\\nunjucks\\src\\lib.js:35:11) at Template.render (E:\\Web\\WebPage\\node_modules\\nunjucks\\src\\environment.js:526:21) at Environment.renderString (E:\\Web\\WebPage\\node_modules\\nunjucks\\src\\environment.js:364:17) at Promise (E:\\Web\\WebPage\\node_modules\\hexo\\lib\\extend\\tag.js:66:9) at Promise._execute (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\debuggability.js:303:9) at Promise._resolveFromExecutor (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\promise.js:483:18) at new Promise (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\promise.js:79:10) at Tag.render (E:\\Web\\WebPage\\node_modules\\hexo\\lib\\extend\\tag.js:64:10) at Object.tagFilter [as onRenderEnd] (E:\\Web\\WebPage\\node_modules\\hexo\\lib\\hexo\\post.js:230:16) at Promise.then.then.result (E:\\Web\\WebPage\\node_modules\\hexo\\lib\\hexo\\render.js:65:19) at tryCatcher (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\promise.js:512:31) at Promise._settlePromise (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\promise.js:569:18) at Promise._settlePromise0 (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\promise.js:614:10) at Promise._settlePromises (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\promise.js:693:18) at Async._drainQueue (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\async.js:133:16) at Async._drainQueues (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\async.js:143:10) at Immediate.Async.drainQueues (E:\\Web\\WebPage\\node_modules\\bluebird\\js\\release\\async.js:17:14) at runCallback (timers.js:672:20) at tryOnImmediate (timers.js:645:5) at processImmediate [as _immediateCallback] (timers.js:617:5) 解决方法：排查文章，但不要将文章放入草稿文件夹_drafts中，因为草稿文件夹虽然最后没有显示，但依然会被编译从而产生错误! 正确方式是将文章转移出根目录，然后再一个个拖进来编译。（或许可以更改后缀，去掉.md?） 没有安装足够的插件：有些主题需要安装相应插件，有些则不需要。请按作者说明文档或者github仓库issues中解决方案操作。 没有使用hexo clean命令，之前public文件夹中有残留。此时能够正常编译，但是编译后可能出现网页显示紊乱。 胡乱安装插件，例如icuras主题使用了valine，但是在package.json中并没有valine标签(此处存疑，或许胡乱安装插件并不会出现编译错误)。 如果本地服务正常，那么部署到github也因该是正常的。 部署到github仓库一般来说上传之前需要安装一个部署插件hexo-deployer-git。1$ npm install hexo-deployer-git --save 然后修改配置1234deploy: type: git repo: &lt;repository url&gt; branch: [branch] 不然会出现如下错误1234567891011121314INFO Generated: fancybox/helpers/jquery.fancybox-media.jsINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.jsINFO Generated: fancybox/helpers/jquery.fancybox-buttons.jsINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: css/style.cssINFO Generated: archives/2018/05/index.htmlINFO Generated: css/fonts/fontawesome-webfont.svgINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: fancybox/helpers/fancybox_buttons.pngINFO Generated: css/images/banner.jpgINFO Generated: 2018/05/17/hello-world/index.htmlINFO 28 files generated in 1.13 sERROR Deployer not found: git 安装完成后继续部署，一般会出现如下错误：12345678910111213141516bash: /dev/tty: No such device or addresserror: failed to execute prompt script (exit code 1)fatal: could not read Username for &apos;https://github.com&apos;: No errorFATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: fatal: HttpRequestException encountered. ��������ʱ������bash: /dev/tty: No such device or addresserror: failed to execute prompt script (exit code 1)fatal: could not read Username for &apos;https://github.com&apos;: No error at ChildProcess.&lt;anonymous&gt; (E:\\Web\\webtest2\\node_modules\\hexo-util\\lib\\spawn.js:37:17) at emitTwo (events.js:106:13) at ChildProcess.emit (events.js:191:7) at ChildProcess.cp.emit (E:\\Web\\webtest2\\node_modules\\cross-spawn\\lib\\enoent.js:40:29) at maybeClose (internal/child_process.js:891:16) at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5) 出现此类错误原因不明，但是解决办法一般是更改仓库地址，从HTTPS切换到SSH，而后继续部署。1234567891011121314$ hexo d -gINFO Start processingINFO Files loaded in 202 msINFO 0 files generated in 252 msINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...On branch masternothing to commit, working tree cleanBranch master set up to track remote branch master from git@github.com:xxx/webtest.git.To github.com:xxx/webtest.git * [new branch] HEAD -&gt; masterINFO Deploy done: git 我们会发现部署已经成功！部署不成功的原因一般为没有配置好SSH，关于配置SSH此处不再赘述，可以参考技术博客。 部署后显示不正确的原因主要有： github 只提供以username命名的仓库的静态网页服务，如果部署到其他仓库会只会显示文字。 解决方法：使用custom domain解析到相关地址部署。 以上为猜测，推测也可以在hexo根目录配置文件_config.yml中更改相关配置到仓库目录解决。12url: https://username.github.io/repo/root: /repo/ github静态网页渲染速度很慢，部署到服务器后需要时间渲染。 解决方法：请耐心等待,经常需要半个小时以上的时间才可以完成渲染。 浏览器内存占用，包括css样式已经域名解析等。通过换浏览器能够正常显示。 解决方法：清理浏览器内存 参考资料 Hexo博客常用插件及用法","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/tags/Hexo/"}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://wiki.htpsi.me/categories/Hexo/"}]},{"title":"Welcome to HtPsi's Wiki","date":"2018-05-11T07:55:34.338Z","path":"wiki/index/","text":"This is HtPsi‘s personal wiki website. Previously, I used OneNote to take notes. But as these notes grew sharply, It took more efforts to search for the information needed. Also, OneNote’s format seems very chaotic, which is a bit annoying. Just then, I found my own website, and I thought “Hey! why not rearrange these notes on the internet!”. Using the “tags” and “categories”, these notes can be placed in order. So I set up this website to store my knowledge and hope you can find something useful here!","tags":[],"categories":[]},{"title":"Hello World","date":"2018-05-11T07:55:34.333Z","path":"wiki/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[{"name":"PS3","slug":"PS3","permalink":"https://wiki.htpsi.me/tags/PS3/"},{"name":"Games","slug":"Games","permalink":"https://wiki.htpsi.me/tags/Games/"}],"categories":[{"name":"Diary","slug":"Diary","permalink":"https://wiki.htpsi.me/categories/Diary/"}]}]}